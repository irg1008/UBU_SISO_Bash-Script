function entraEnMemoria() {
  local entra="false"
  local i="$1"
  if [[ "${arrayCopia[$PROC_EST, $i]}" == "${estados[0]}" || "${arrayCopia[$PROC_EST, $i]}" == "${estados[1]}" ]] && [[ "${array[$PROC_EST, $i]}" == "${estados[2]}" || "${array[$PROC_EST, $i]}" == "${estados[3]}" ]]; then
    entra="true"
  fi

  echo "$entra"
}
function meterEnMemoria() {
  posicion="0"
  for ((tamProc = 0; tamProc < array[$PROC_TAM, $i]; tamProc++)); do
    while [[ "${procesosEnMemoria[$posicion]}" != "$stringVacio" ]]; do
      ((posicion++))
    done
    procesosEnMemoria[$posicion]="$i"
  done
}
function saleDeMemoria() {
  local sale="false"
  local i="$1"
  if [[ "${arrayCopia[$PROC_EST, $i]}" == "${estados[2]}" || "${arrayCopia[$PROC_EST, $i]}" == "${estados[3]}" ]] && [[ "${array[$PROC_EST, $i]}" == "${estados[4]}" ]]; then
    sale="true"
  fi

  echo "$sale"
}
function sacarDeMemoria() {
  for ((j = 0; j < MEM_TAM; j++)); do
    if [[ "${procesosEnMemoria[$j]}" == "$i" ]]; then
      procesosEnMemoria[$j]="$stringVacio"
    fi
  done
}
function comprobarMovimientosDeMemoria() {
  local -i posicion

  for ((i = 1; i <= NUM_FIL; i++)); do
    if [[ "$(entraEnMemoria "$i")" == "true" ]]; then
      meterEnMemoria
    elif [[ "$(saleDeMemoria "$i")" == "true" ]]; then
      sacarDeMemoria
    fi
  done
}
comprobarMovimientosDeMemoria
